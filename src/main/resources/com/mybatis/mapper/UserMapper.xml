<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.icss.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.icss.bean.User" >
    <id column="username" property="username" jdbcType="VARCHAR" />
    <result column="eid" property="eid" jdbcType="INTEGER" />
    <result column="password" property="password" jdbcType="VARCHAR" />
  </resultMap>
 <!-- Role配置 --> 
    <resultMap id="RoleBaseResultMap" type="com.icss.bean.Role" >
    <id column="rid" property="rid" jdbcType="INTEGER" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="INTEGER" />
  </resultMap>
  <!-- Permission配置 -->
    <resultMap id="PermsBaseResultMap" type="com.icss.bean.Permission" >
    <id column="pid" property="pid" jdbcType="INTEGER" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
  </resultMap>
    <!-- Roleperms配置 -->
    <resultMap id="RolepermsBaseResultMap" type="com.icss.bean.Role" >
    <id column="pid" property="pid" jdbcType="INTEGER" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
  </resultMap>
  
  <select id="getRoles" resultMap="RoleBaseResultMap" parameterType="java.lang.String" >
	SELECT
	roles.`name`,
	roles.`description`
	FROM
	roles
	INNER JOIN userrole ON userrole.rid = roles.rid
    INNER JOIN users ON userrole.eid=users.eid
    where `users`.`username` = #{username,jdbcType=VARCHAR}
	</select>
  
    <select id="getPermissions" resultMap="PermsBaseResultMap" parameterType="java.lang.String" >
	SELECT
	p.`name`,
	p.`description`
	from permissions p
	JOIN rolepermission rp ON p.pid = rp.pid
	WHERE rid IN (
	SELECT r.`rid`
	FROM roles r
	JOIN userrole ur  ON r.rid = ur.rid
  JOIN users u ON ur.eid = u.eid
	WHERE u.username = #{username,jdbcType=VARCHAR}
	)
	</select>
  
     <select id="getAllRole" resultMap="RoleBaseResultMap" parameterType="java.lang.String" >
	SELECT
	*
	from roles
	</select>
  
    <select id="getAllPerms" resultMap="PermsBaseResultMap" parameterType="java.lang.String" >
	SELECT
	*
	from permissions
	</select>
	
   <select id="getPermsByrid" resultMap="PermsBaseResultMap" parameterType="int" >
	SELECT
	p.pid,p.name,p.description
	from permissions p
	join rolepermission rp on p.pid=rp.pid
	join roles r on rp.rid=r.rid
	where r.rid= #{rid,jdbcType=INTEGER}
	</select>
  
    <select id="getPwd" parameterType="java.lang.Integer" resultType="java.lang.String">
	SELECT `password`
	FROM  users
	WHERE eid=  #{eid,jdbcType=INTEGER}
  </select>

    <select id="updatePwd" parameterType="com.icss.bean.User">
	UPDATE users 
	<set >
    	<if test="password != null" >
    	`password` = #{password,jdbcType=VARCHAR}
		</if>
		WHERE eid = #{eid,jdbcType=INTEGER}
	</set>
  </select>
  
  <sql id="Base_Column_List" >
    username, eid, password, eid
  </sql>
   <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from users
    where username = #{username,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from users
    where username = #{username,jdbcType=VARCHAR}
  </delete>
  
    <delete id="deleteUserByEid" parameterType="int" >
    delete from users 
    where eid  = #{eid,jdbcType=INTEGER}
  </delete> 
  
  <insert id="insert" parameterType="com.icss.bean.User" >
    insert into users (username, password, 
      eid)
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{eid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.icss.bean.User" >
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="eid != null" >
        eid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="eid != null" >
        #{eid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
<update id="updateByPrimaryKeySelective" parameterType="com.icss.bean.User" >
    update users
    <set >
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="eid != null" >
        eid = #{eid,jdbcType=INTEGER},
      </if>
    </set>
    where username = #{username,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.icss.bean.User" >
    update users
    set  password = #{password,jdbcType=VARCHAR},
      eid = #{eid,jdbcType=INTEGER}
    where username = #{username,jdbcType=VARCHAR}
  </update>
  
  <!-- <select id="getuidByeid" resultType="Integer" parameterType="int" >
    select 
  	u.uid
    from users u
    where eid =  #{eid,jdbcType=INTEGER}
  </select> -->
</mapper>